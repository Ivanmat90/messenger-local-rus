const socket = io();
let nickname = localStorage.getItem('nickname') || '';
let currentTheme = localStorage.getItem('theme') || 'light';

// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const nicknameModal = document.getElementById('nickname-modal');
const chatContainer = document.querySelector('.chat-container');
const messagesDiv = document.getElementById('messages');
const messageInput = document.getElementById('message-input');
const sendBtn = document.getElementById('send-btn');
const onlineCount = document.getElementById('online-count');
const themeToggle = document.getElementById('theme-toggle');
const sideMenu = document.getElementById('side-menu');
const menuToggle = document.getElementById('menu-toggle');
const closeMenu = document.getElementById('close-menu');
const emojiToggle = document.getElementById('emoji-toggle');
const emojiPicker = document.getElementById('emoji-picker');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã
function applyTheme() {
  document.documentElement.setAttribute('data-theme', currentTheme);
  themeToggle.textContent = currentTheme === 'light' ? 'üåô' : '‚òÄÔ∏è';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞
function initChat() {
  applyTheme();
  
  if (nickname) {
    nicknameModal.style.display = 'none';
    chatContainer.style.display = 'flex';
    socket.emit('user_connected', nickname);
  } else {
    nicknameModal.style.display = 'flex';
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∏–∫–∞
document.getElementById('save-nickname').addEventListener('click', () => {
  const input = document.getElementById('nickname-input');
  const loader = document.getElementById('nickname-loader');
  const btnText = document.querySelector('#save-nickname span');
  
  nickname = input.value.trim();
  if (nickname) {
    loader.style.display = 'block';
    btnText.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞...';
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É)
    setTimeout(() => {
      localStorage.setItem('nickname', nickname);
      nicknameModal.style.display = 'none';
      chatContainer.style.display = 'flex';
      socket.emit('user_connected', nickname);
      
      loader.style.display = 'none';
      btnText.textContent = '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å';
    }, 800);
  }
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
function sendMessage() {
  const message = messageInput.value.trim();
  if (message) {
    const messageData = {
      text: message,
      nickname: nickname
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ä–∞–∑—É –≤ –∏—Å—Ö–æ–¥—è—â–∏–µ
    addMessage(message, true);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    socket.emit('message', messageData);
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    messageInput.value = '';
  }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
function addMessage(text, isOutgoing, senderNickname = nickname) {
  const messageDiv = document.createElement('div');
  messageDiv.className = `message ${isOutgoing ? 'outgoing' : 'incoming'}`;
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –Ω–∏–∫–æ–º
  const header = document.createElement('div');
  header.className = 'message-header';
  header.textContent = isOutgoing ? '–í—ã' : senderNickname;
  
  // –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  const content = document.createElement('div');
  content.textContent = text;
  
  // –í—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è
  const time = document.createElement('div');
  time.className = 'message-time';
  time.textContent = new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
  
  // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
  messageDiv.appendChild(header);
  messageDiv.appendChild(content);
  messageDiv.appendChild(time);
  messagesDiv.appendChild(messageDiv);
  
  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
  scrollToBottom();
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    messageDiv.style.opacity = '1';
    messageDiv.style.transform = 'translateY(0)';
  }, 10);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
socket.on('message', (data) => {
  addMessage(data.text, false, data.nickname);
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–Ω–ª–∞–π–Ω
socket.on('user_list', (users) => {
  onlineCount.textContent = `üë• ${users.length}`;
});

// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
function scrollToBottom() {
  messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
themeToggle.addEventListener('click', () => {
  currentTheme = currentTheme === 'light' ? 'dark' : 'light';
  localStorage.setItem('theme', currentTheme);
  applyTheme();
});

// –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
menuToggle.addEventListener('click', () => {
  sideMenu.classList.add('active');
});

closeMenu.addEventListener('click', () => {
  sideMenu.classList.remove('active');
});

// –≠–º–æ–¥–∑–∏-–ø–∞–Ω–µ–ª—å
emojiToggle.addEventListener('click', () => {
  emojiPicker.style.display = emojiPicker.style.display === 'block' ? 'none' : 'block';
});

// –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
document.getElementById('clear-chat').addEventListener('click', () => {
  messagesDiv.innerHTML = '';
  sideMenu.classList.remove('active');
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ Enter
messageInput.addEventListener('keypress', (e) => {
  if (e.key === 'Enter') {
    sendMessage();
  }
});

// –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
sendBtn.addEventListener('click', sendMessage);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
  initChat();
  
  // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
  const welcomeMsg = document.querySelector('.welcome-message');
  if (welcomeMsg) {
    socket.on('message', () => {
      welcomeMsg.style.display = 'none';
    });
  }
});

// –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —ç–º–æ–¥–∑–∏ (–¥–ª—è –¥–µ–º–æ)
const emojis = {
  smileys: ['üòÄ', 'üòä', 'üòÇ', 'ü§£', 'üòç', 'üòé', 'ü•≥', 'üòú', 'ü§©', 'üòá'],
  animals: ['üê∂', 'üê±', 'üê≠', 'üêπ', 'üê∞', 'ü¶ä', 'üêª', 'üêº', 'ü¶Å', 'üêÆ'],
  food: ['üçé', 'üçï', 'üçî', 'üçü', 'üç¶', 'üç©', 'üç™', 'üç´', 'üçì', 'üçâ']
};

function loadEmojis(category) {
  const container = document.getElementById('emoji-container');
  container.innerHTML = '';
  
  emojis[category].forEach(emoji => {
    const btn = document.createElement('button');
    btn.textContent = emoji;
    btn.addEventListener('click', () => {
      messageInput.value += emoji;
      messageInput.focus();
    });
    container.appendChild(btn);
  });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —ç–º–æ–¥–∑–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
document.querySelectorAll('[data-category]').forEach(btn => {
  btn.addEventListener('click', () => {
    loadEmojis(btn.dataset.category);
  });
});

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
loadEmojis('smileys');